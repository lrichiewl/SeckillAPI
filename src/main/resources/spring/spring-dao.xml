<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
">
    <!-- 配置整合MyBatis -->

    <!-- 1：配置数据库相关参数 properties的属性：${url}-->
    <context:property-placeholder location="classpath:spring/jdbc.properties"/>

    <!-- 2：数据库连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 配置连接池属性 -->
        <property name="driverClass" value="${jdbc.driver}"/>
        <!-- 基本属性 -->
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!-- c3p0私有属性 -->
        <property name="maxPoolSize" value="30"/>
        <property name="minPoolSize" value="10"/>
            <!-- 关闭连接后不自动commit -->
        <property name="autoCommitOnClose" value="false"/>
            <!-- 获取连接的超时时间 -->
        <property name="checkoutTimeout" value="1000"/>
            <!-- 重试次数 -->
        <property name="acquireRetryAttempts" value="2"/>

    </bean>

    <!-- 3：配置SqlSessionFactory (MyBatis与Spring整合的核心)-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 配置MyBatis的全局文件 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 扫描entity包，使用别名（重要，使配置可以直接写类名而不用写全地址） -->
        <property name="typeAliasesPackage" value="com.lrichiewl.seckill.entity"/>
        <!-- 扫描SQL配置文件：Mapper需要的XML文件 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!-- 4：配置扫描DAO接口包：动态实现DAO接口，注入到Spring容器中 (MyBatis与Spring整合的核心) -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入SQLSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 提供需要扫描DAO接口的包 -->
        <property name="basePackage" value="com.lrichiewl.seckill.dao"/>
    </bean>
</beans>